variables:
  IMAGE_WITH_TAG: $CI_REGISTRY_IMAGE
  EXPOSE_PORT: 25566
  CONTAINER_NAME: "game"

stages:
    - test
    - build
    - deploy

# run_tests:
#     stage: test
#     image: akorn/luarocks:lua5.1-alpine
#     script:
#         - luarocks install busted
#         - cd server && busted

build_image:
    image: docker
    stage: build 
    services:
        - docker:dind
    script:
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
        - docker build -t $IMAGE_WITH_TAG server/
        - docker push $IMAGE_WITH_TAG

zip_client:
    stage: build
    image: debian
    script:
        - apt update
        - apt install -y wget zip unzip
        - sh build.sh
    artifacts:
        name: game
        paths:
            - client.zip
            - server/
        expire_in: 4 days

deploy_server:
    image: node:latest
    before_script:
        - 'which ssh-agent || ( apt-get install -qq openssh-client )'
        - eval $(ssh-agent -s)
        - ssh-add <(echo "$SSH_PRIVATE_KEY")
        - mkdir -p ~/.ssh
        - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    stage: deploy 
    environment:
        name: dev 
        url: cloud.mypenink.com
    script:
        - ssh root@cloud.mypenink.com "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
        - ssh root@cloud.mypenink.com "docker rm -f $CONTAINER_NAME || true"
        - ssh root@cloud.mypenink.com "docker rmi -f $IMAGE_WITH_TAG || true"
        - ssh root@cloud.mypenink.com "docker pull $IMAGE_WITH_TAG" 
        - ssh root@cloud.mypenink.com "docker run -d --restart unless-stopped --name $CONTAINER_NAME -p $EXPOSE_PORT:25566/udp" $IMAGE_WITH_TAG"
    dependencies: []
    only:
        refs:
            - master


